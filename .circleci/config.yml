version: 2.1
orbs:
  ruby: circleci/ruby@2.1.0
  browser-tools: circleci/browser-tools@1.4.3
  node: circleci/node@5.1.0

ARTIFACTS_PATH: &ARTIFACTS_PATH ~/test-artifacts

common-config: &common-config
  working_directory: ~/goggles_main
  shell: /bin/bash --login
  # NOTE: make sure ENV vars on CircleCI web UI include CC_TEST_REPORTER_ID
  #       for CodeClimate test coverage upload! (Otherwise the 'upload-coverage' step will fail.)
  docker:
    - image: cimg/ruby:3.1.4-browsers
      environment:
        RAILS_ENV: test
        NODE_ENV: test
        BABEL_ENV: test
        BUNDLE_JOBS: 2
        BUNDLE_RETRY: 2
        BUNDLE_PATH: vendor/bundle
        PAGER: cat
        GIT_LFS_SKIP_SMUDGE: 1
        AUTO_ARTIFACTS: 1
        ARTIFACTS_PATH: *ARTIFACTS_PATH
    - image: cimg/mariadb:10.6.12
      environment:
        DATABASE_NAME: goggles_test
        DATABASE_USER: root
        PAGER: cat

deploy-config: &deploy-config
  working_directory: ~/goggles_main
  shell: /bin/bash --login
  docker:
    - image: cimg/ruby:3.1.4-browsers
      environment:
        BUNDLE_JOBS: 2
        BUNDLE_RETRY: 2
        BUNDLE_PATH: vendor/bundle
        PAGER: cat
        GIT_LFS_SKIP_SMUDGE: 1
    - image: cimg/mariadb:10.6.12
      environment:
        DATABASE_NAME: goggles
        DATABASE_USER: root
        PAGER: cat

web-assets: &web-assets
  name: Webpacker/Yarn assets
  command: |
    echo "- RAILS_ENV...: $RAILS_ENV"
    echo "- BABEL_ENV...: $BABEL_ENV"
    echo "- NODE_ENV....: $NODE_ENV"
    bin/rails yarn:install
    bin/rails assets:precompile

common-db-setup: &common-db-setup
  name: DB setup
  command: |
    sudo apt update
    sudo apt-get install mysql-client
    mkdir -p tmp ~/test-results "$ARTIFACTS_PATH"
    echo $RAILS_MASTER_KEY > config/master.key
    cp ./tmp/test.sql.bz2 db/dump/test.sql.bz2
    mv config/database_ci.yml config/database.yml
    dockerize -wait tcp://localhost:3306 -timeout 1m
    echo "- RAILS_ENV...: $RAILS_ENV"
    echo "- BABEL_ENV...: $BABEL_ENV"
    echo "- NODE_ENV....: $NODE_ENV"
    bin/rails db:rebuild from=test
    bin/rails db:migrate
    ./tmp/cc-test-reporter before-build


jobs:
  persisted-data:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - run:
          name:  Setup persisted data
          command: |
            mkdir -p tmp
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
            curl -L -o ./tmp/test.sql.bz2 "https://github.com/steveoro/goggles_db/raw/master/spec/dummy/db/dump/test.sql.bz2"
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
            - test.sql.bz2

  rubocop:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - ruby/rubocop-check:
          app-dir: ~/goggles_main
          label: Rubocop
          format: pacman

  brakeman:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - checkout
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          name: Brakeman
          command: |
            bundle exec brakeman -A6q -c .brakeman.cfg

  zeitwerk:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: Zeitwerk check
          command: |
            bundle exec rake zeitwerk:check


  rspec-components:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            TEST_FILES=$(circleci tests glob "spec/components/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-components.xml \
                        -f doc -- ${TEST_FILES}
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-components.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-components.*.json


  rspec-decorators:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            TEST_FILES=$(circleci tests glob "spec/decorators/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-decorators.xml \
                        -f doc -- ${TEST_FILES}
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-decorators.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-decorators.*.json


  rspec-helpers:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            TEST_FILES=$(circleci tests glob "spec/helpers/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-helpers.xml \
                        -f doc -- ${TEST_FILES}
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-helpers.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-helpers.*.json


  rspec-jobs:
    <<: *common-config
    # parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-jobs.xml \
                        -f doc -P spec/jobs/**/*_spec.rb
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-jobs.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-jobs.*.json


  rspec-mailers:
    <<: *common-config
    # parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-mailers.xml \
                        -f doc -P spec/mailers/**/*_spec.rb
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-mailers.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-mailers.*.json


  rspec-requests:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup

      - node/install:
          install-yarn: true
          node-version: '16.13'
      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
      - run:
          <<: *web-assets
      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
          paths:
            - public/packs-test
            - tmp/cache/webpacker
            - node_modules/.cache

      - run:
          name: RSpec - Components
          command: |
            TEST_FILES=$(circleci tests glob "spec/requests/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-requests.xml \
                        -f doc -- ${TEST_FILES}
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-requests.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-requests.*.json


  rspec-strategies:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            TEST_FILES=$(circleci tests glob "spec/strategies/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-strategies.xml \
                        -f doc -- ${TEST_FILES}
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-strategies.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-strategies.*.json


  rspec-views:
    <<: *common-config
    parallelism: 2
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            TEST_FILES=$(circleci tests glob "spec/views/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-views.xml \
                        -f doc -- ${TEST_FILES}
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-views.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-views.*.json


  rspec-integration:
    <<: *common-config
    # parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - run:
          name: RSpec - Components
          command: |
            bundle exec rspec --profile 10 --color --order rand \
                        -f RspecJunitFormatter --out ~/test-results/rspec-integration.xml \
                        -f doc -P spec/integration/**/*_spec.rb
            ./tmp/cc-test-reporter format-coverage -t simplecov \
                                   -o "./tmp/codeclimate.rspec-integration.$CIRCLE_NODE_INDEX.json"
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.rspec-integration.*.json


  upload-coverage:
    <<: *common-config
    # parallelism: 1 (no actual need here)
    steps:
      - attach_workspace:
          at: ~/goggles_main/tmp
      - run:
          name: CodeClimate upload
          command: |
            echo "*** Persisted contents: ***"
            ls -l ./tmp
            ./tmp/cc-test-reporter sum-coverage -o - tmp/codeclimate.*.json | ./tmp/cc-test-reporter upload-coverage --debug --input -


  cucumber-desktop:
    <<: *common-config
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
      - run:
          <<: *web-assets
      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
          paths:
            - public/packs-test
            - tmp/cache/webpacker
            - node_modules/.cache
      - run:
          name: Cucumber - desktop
          command: |
            TEST_FILES=$(circleci tests glob "features/**/*.feature" | circleci tests split --split-by=timings)
            bundle exec cucumber --color --format pretty --format junit --out ~/test-results/cucumber-large.xml \
                                 ${TEST_FILES}
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: *ARTIFACTS_PATH


  cucumber-narrow:
    <<: *common-config
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
      - run:
          <<: *web-assets
      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
          paths:
            - public/packs-test
            - tmp/cache/webpacker
            - node_modules/.cache
      - run:
          name: Cucumber - mobile/narrow
          command: |
            TEST_FILES=$(circleci tests glob "features/**/*.feature" | circleci tests split --split-by=timings)
            CAPYBARA_DRV=headless_chrome_iphonex AUTO_ARTIFACTS=1 RAILS_ENV=test bundle exec cucumber --color --format pretty \
                        --format junit --out ~/test-results/cucumber-narrow.xml ${TEST_FILES}
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: *ARTIFACTS_PATH


  cucumber-tablet:
    <<: *common-config
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - run:
          <<: *common-db-setup
      - node/install:
          install-yarn: true
          node-version: '16.13'
      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
      - run:
          <<: *web-assets
      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-test" }}
          paths:
            - public/packs-test
            - tmp/cache/webpacker
            - node_modules/.cache
      - run:
          name: Cucumber - mobile/tablet
          command: |
            TEST_FILES=$(circleci tests glob "features/**/*.feature" | circleci tests split --split-by=timings)
            CAPYBARA_DRV=headless_chrome_ipad AUTO_ARTIFACTS=1 RAILS_ENV=test bundle exec cucumber --color --format pretty \
                        --format junit --out ~/test-results/cucumber-tablet.xml ${TEST_FILES}
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: *ARTIFACTS_PATH


  docker-build:
    <<: *deploy-config
    steps:
      - checkout
      - attach_workspace:
          at: ~/goggles_main/tmp
      - ruby/install-deps:
          app-dir: ~/goggles_main
          key: goggles_main-v0600
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                <<: *common-db-setup
                environment:
                  RAILS_ENV: production
                  NODE_ENV: production
                  BABEL_ENV: production
      - unless:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                <<: *common-db-setup
                environment:
                  RAILS_ENV: staging
                  NODE_ENV: production
                  BABEL_ENV: production

      - node/install:
          install-yarn: true
          node-version: '16.13'
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - restore_cache:
                keys:
                  - yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-prod" }}
            - run:
                <<: *web-assets
                environment:
                  RAILS_ENV: production
                  NODE_ENV: production
                  BABEL_ENV: production
            - save_cache:
                key: yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-prod" }}
                paths:
                  - public/packs
                  - tmp/cache/webpacker
                  - node_modules/.cache
            - run:
                name: Docker TAGGED prod
                command: |
                  echo "Git Tag << pipeline.git.tag >>"
                  echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
                  docker pull $DOCKERHUB_USERNAME/goggles-main:latest
                  RAILS_ENV=production bundle exec rails assets:precompile
                  docker build -t $DOCKERHUB_USERNAME/goggles-main:prod-<< pipeline.git.tag >> --cache-from=$DOCKERHUB_USERNAME/goggles-main:latest -f Dockerfile.prod .
                  docker push $DOCKERHUB_USERNAME/goggles-main:prod-<< pipeline.git.tag >>
      - unless:
          condition: << pipeline.git.tag >>
          steps:
            - restore_cache:
                keys:
                  - yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-prod" }}
            - run:
                <<: *web-assets
                environment:
                  RAILS_ENV: staging
                  NODE_ENV: production
                  BABEL_ENV: production
            - save_cache:
                key: yarn-cache-v1-{{ checksum "yarn.lock" }}-{{ checksum "tmp/cache/webpacker/last-compilation-digest-prod" }}
                paths:
                  - public/packs
                  - tmp/cache/webpacker
                  - node_modules/.cache
            - run:
                name: Docker LATEST staging
                command: |
                  echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
                  docker pull $DOCKERHUB_USERNAME/goggles-main:latest
                  RAILS_ENV=staging bundle exec rails assets:precompile
                  docker build -t $DOCKERHUB_USERNAME/goggles-main:latest --cache-from=$DOCKERHUB_USERNAME/goggles-main:latest -f Dockerfile.staging .
                  docker push $DOCKERHUB_USERNAME/goggles-main:latest


  deploy:
    <<: *deploy-config
    steps:
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Production DEPLOY
                command: |
                  echo "Git Tag << pipeline.git.tag >>"
                  ssh -o StrictHostKeyChecking=no deploy@$SSH_SERVER "TAG=<< pipeline.git.tag >> MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME DOCKERHUB_PASSWORD=$DOCKERHUB_PASSWORD bash -c ./deploy_prod.sh"
      - unless:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Staging DEPLOY
                command: |
                  ssh -o StrictHostKeyChecking=no deploy@$SSH_SERVER "DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME DOCKERHUB_PASSWORD=$DOCKERHUB_PASSWORD bash -c ./deploy_staging.sh"


workflows:
  full-build:
    jobs:
      - persisted-data
      # - brakeman:
      #     requires:
      #       - persisted-data
      # - rubocop:
      #     requires:
      #       - persisted-data
      # - zeitwerk:
      #     requires:
      #       - persisted-data

      # - rspec-components:
      #     requires:
      #       - brakeman
      #       - rubocop
      #       - zeitwerk
      # - rspec-decorators:
      #     requires:
      #       - brakeman
      #       - rubocop
      #       - zeitwerk

      # - rspec-requests:
      #     requires:
      #       - persisted-data
      #       # - brakeman
      #       # - rubocop
      #       # - zeitwerk
      #     pre-steps:
      #       - browser-tools/install-chrome:
      #           chrome-version: 114.0.5735.90
      #           replace-existing: true
      #       - browser-tools/install-chromedriver
      #       - run:
      #           name: Check install
      #           command: |
      #             google-chrome --version
      #             chromedriver --version
      #             node -v


      # - rspec-helpers:
      #     requires:
      #       - rspec-components
      #       - rspec-decorators
      # - rspec-mailers:
      #     requires:
      #       - rspec-components
      #       - rspec-decorators
      # - rspec-views:
      #     requires:
      #       - rspec-components
      #       - rspec-decorators

      # - rspec-jobs:
      #     requires:
      #       - rspec-helpers
      # - rspec-strategies:
      #     requires:
      #       - rspec-mailers
      # - rspec-integration:
      #     requires:
      #       - rspec-views

      # - upload-coverage:
      #     requires:
      #       - rspec-requests
      #       - rspec-jobs
      #       - rspec-strategies
      #       - rspec-integration

      # - cucumber-desktop:
      #     requires:
      #       - persisted-data
      #     pre-steps:
      #       - browser-tools/install-chrome:
      #           chrome-version: 114.0.5735.90
      #           replace-existing: true
      #       - browser-tools/install-chromedriver
      #       - run:
      #           name: Check install
      #           command: |
      #             google-chrome --version
      #             chromedriver --version
      #             node -v

      # - cucumber-narrow:
      #     requires:
      #       - rspec-requests
      #     pre-steps:
      #       - browser-tools/install-chrome:
      #           chrome-version: 114.0.5735.90
      #           replace-existing: true
      #       - browser-tools/install-chromedriver
      #       - run:
      #           name: Check install
      #           command: |
      #             google-chrome --version
      #             chromedriver --version
      #             node -v

      # - cucumber-tablet:
      #     requires:
      #       - rspec-requests
      #     pre-steps:
      #       - browser-tools/install-chrome:
      #           chrome-version: 114.0.5735.90
      #           replace-existing: true
      #       - browser-tools/install-chromedriver
      #       - run:
      #           name: Check install
      #           command: |
      #             google-chrome --version
      #             chromedriver --version
      #             node -v

      # - docker-build:
      #     requires:
      #       - cucumber-desktop
      #     requires:
      #       - cucumber-desktop
      #       - cucumber-narrow
      #       - cucumber-tablet

      - docker-build:
          requires:
            - persisted-data
      - deploy:
          requires:
            - docker-build
