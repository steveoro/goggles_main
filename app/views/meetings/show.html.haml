.wrapper-body
  .spacer-left

  .main-content#top-of-page
    = render(partial: 'meeting_header', locals: { meeting: @meeting })
    = render(partial: 'meeting_navs', locals: { meeting: @meeting, active_tab: 'results', can_tap_to_results: @default_team_or_swimmer_in_meeting })

    - cache(cache_key_for_meeting(action: 'meeting_show', meeting_id: @meeting.id, max_updated_at: @max_updated_at,
            team_id: @team&.id, swimmer_id: @swimmer&.id)) do
      %section#meeting-show-results
        %table.table.table-striped.table-sm
          - @meeting_events&.includes(:event_type, meeting_session: :meeting)&.joins(:event_type,
                meeting_session: :meeting)&.by_order&.each_with_index do |meeting_event, index|
            - prgs_for_event = GogglesDb::MeetingProgram.where(meeting_event_id: meeting_event.id).joins(:meeting_event,
                :event_type, :category_type, :gender_type).includes(:meeting_event, :event_type, :category_type,
                :gender_type).order('category_types.age_begin, gender_types.id DESC')
            %thead
              = render(Mevent::RowSeparatorComponent.new) if index.positive? # skip first separator
              = render(Mevent::RowTitleComponent.new(event_container: meeting_event, can_manage: user_signed_in?))
            = render(Mevent::RowLinksComponent.new(meeting_events: @meeting_events))
            - prgs_for_event.each do |mprg|
              = render(Mprg::RowSeparatorComponent.new)
              = render(Mprg::RowLinksComponent.new(meeting_programs: prgs_for_event))
              %thead
                = render(Mprg::RowTitleComponent.new(meeting_program: mprg))
              - if mprg.relay?
                = render(MRR::TableComponent.new(mrrs: mprg.meeting_relay_results.includes(:team)))
              - else
                = render(MIR::TableComponent.new(mirs: mprg.meeting_individual_results.includes(:meeting, :swimmer, :team),
                        managed_team_ids: @managed_team_ids, current_swimmer_id: @current_swimmer_id))

  .spacer-right
