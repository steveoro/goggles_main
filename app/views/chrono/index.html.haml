.wrapper-body
  .spacer-left

  .main-content
    .row-fluid#chrono-index-title
      %h4.text-center.pb-3
        %i.fa.fa-clock-o
        = t('chrono.index.title')
    .container
      %p
        %small
          %i= t('chrono.index.queue_notice')

    .container.mt-2#chrono-rows
      - if @queues.present?
        - GogglesDb::ImportQueueDecorator.decorate_collection(@queues).each do |queue|
          .row.border
            .col.mt-2.text-left{ id: "main-req#{queue.id}" }
              = queue.chrono_result_label
              - if queue.sibling_rows.present?
                = render(Switch::RotatingComponent.new(target_id: "laps#{queue.id}"))
            .col-2.my-1.text-center
              .row
                - if GogglesDb::GrantChecker.admin?(current_user)
                  = link_to(chrono_download_path(id: queue.id), id: "btn-download-json-#{queue.id}",
                            class: 'btn btn-sm btn-outline-info', 'aria-label' => 'Download JSON') do
                    %i.fa.fa-download
                  &nbsp;
                = button_to(chrono_delete_path(id: queue.id), id: "frm-delete-row-#{queue.id}", method: :delete,
                            class: 'btn btn-sm btn-outline-danger',
                            data: { confirm: t('chrono.index.confirm_delete', queue_label: queue.text_label) }) do
                  %i.fa.fa-trash-o

          - if queue.sibling_rows.present?
            %ul.collapse{ id: "laps#{queue.id}" }
              - collection = queue.sibling_rows.or(GogglesDb::ImportQueue.where(id: queue.id)).includes(:import_queues)
              - decorated = GogglesDb::ImportQueueDecorator.decorate_collection(collection)
              - decorated.sort_by(&:req_length_in_meters).each do |linked_queue|
                %li.text-left{ id: "lap#{linked_queue.id}" }
                  = linked_queue.chrono_delta_label
      - else
        .row.list-group-item.text-center
          %small= t('chrono.index.no_data_notice')

    .container
      .container.my-4
        .row-fluid.text-center
          = link_to(t('chrono.buttons.new_recording'), chrono_new_path, id: 'btn-new-chrono',
                    class: 'btn btn-primary', 'aria-label' => 'New recording', type: 'button')
      %p.mb-4
        %small
          %i= t('chrono.index.registration_notice')

  .spacer-right
